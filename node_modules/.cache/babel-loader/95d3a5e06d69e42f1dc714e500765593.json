{"ast":null,"code":"// import {\n//   GET_ALL_DATA,\n//   ADD_NEW_DATA,\n//   EDIT_DATA,\n//   DELETE_DATA,\n// } from \"../constant/constant\";\n// const initialState = {\n//   users: [\n//     {\n//       id: 1,\n//       name: \"ajeet\",\n//       username: \"stark\",\n//       email: \"stark@gmail.com\",\n//     },\n//     {\n//       id: 2,\n//       name: \"aman\",\n//       username: \"savoo\",\n//       email: \"aman@gmail.com\",\n//     },\n//   ],\n//   contact: null,\n// };\n// export const reducers = (state = initialState, action) => {\n//   switch (action.type) {\n//     // case ADD_NEW_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: [action.payload, ...state.users],\n//     //   };\n//     case GET_ALL_DATA:\n//       let arr = state.addnew.filter((contact) => contact.id == action.payload);\n//       arr = arr.values();\n//       for (let val of arr) {\n//         arr = val;\n//       }\n//       return {\n//         ...state,\n//         contact: arr,\n//       };\n//     // case EDIT_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: state.users.map((addnew) =>\n//     //       addnew.id == action.payload.id ? action.payload : addnew\n//     //     ),\n//     //   };\n//     // case DELETE_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: state.users.filter((addnew) => addnew.id !== action.payload),\n//     //   };\n//     default:\n//       return state;\n//   }\n// };\nimport { CREATE_CONTACT, GET_CONTACT, UPDATE_CONTACT, DELETE_CONTACT } from \"../constant/constant\";\nconst intialState = {\n  contacts: [{\n    id: 3,\n    name: \"Ajeet Singh\",\n    username: \"Jatt\",\n    email: \"jatt@gmail.com\"\n  }, {\n    id: 4,\n    name: \"stark Singh\",\n    username: \"rana\",\n    email: \"jattran@gmail.com\"\n  }, {\n    id: 2,\n    name: \"Satvinder Singh\",\n    username: \"Samar\",\n    email: \"Singhsatvinder827@gmail.com\"\n  }, {\n    id: 10,\n    name: \"Samar Deep\",\n    username: \"Samar\",\n    email: \"Samar.biz\"\n  }],\n  contact: null\n};\nexport const cantactReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CREATE_CONTACT:\n      return { ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case GET_CONTACT:\n      let arr = state.contacts.filter(contact => contact.id == action.payload);\n      arr = arr.values();\n\n      for (let val of arr) {\n        arr = val;\n      }\n\n      return { ...state,\n        contact: arr\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id == action.payload.id ? action.payload : contact)\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/stark/Videos/cetpa/11/supercar/src/redux/reducer/reducer.js"],"names":["CREATE_CONTACT","GET_CONTACT","UPDATE_CONTACT","DELETE_CONTACT","intialState","contacts","id","name","username","email","contact","cantactReducer","state","action","type","payload","arr","filter","values","val","map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SACIA,cADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,cAJJ,QAKS,sBALT;AAOE,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,CAER;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,QAAQ,EAAE,MAHZ;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAFQ,EAQR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,QAAQ,EAAE,MAHZ;AAIEC,IAAAA,KAAK,EAAE;AAJT,GARQ,EAcR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAdQ,EAoBR;AACEH,IAAAA,EAAE,EAAE,EADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,KAAK,EAAE;AAJT,GApBQ,CADQ;AA4BlBC,EAAAA,OAAO,EAAE;AA5BS,CAApB;AA+BA,OAAO,MAAMC,cAAc,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBR,WAAwB;AAAA,MAAXS,MAAW;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,cAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELP,QAAAA,QAAQ,EAAE,CAACQ,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACP,QAA1B;AAFL,OAAP;;AAIF,SAAKJ,WAAL;AACE,UAAIe,GAAG,GAAGJ,KAAK,CAACP,QAAN,CAAeY,MAAf,CACPP,OAAD,IAAaA,OAAO,CAACJ,EAAR,IAAcO,MAAM,CAACE,OAD1B,CAAV;AAGAC,MAAAA,GAAG,GAAGA,GAAG,CAACE,MAAJ,EAAN;;AACA,WAAK,IAAIC,GAAT,IAAgBH,GAAhB,EAAqB;AACnBA,QAAAA,GAAG,GAAGG,GAAN;AACD;;AACD,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,OAAO,EAAEM;AAFJ,OAAP;;AAIF,SAAKd,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELP,QAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAee,GAAf,CAAoBV,OAAD,IAC3BA,OAAO,CAACJ,EAAR,IAAcO,MAAM,CAACE,OAAP,CAAeT,EAA7B,GAAkCO,MAAM,CAACE,OAAzC,GAAmDL,OAD3C;AAFL,OAAP;;AAMF,SAAKP,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELP,QAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAeY,MAAf,CACPP,OAAD,IAAaA,OAAO,CAACJ,EAAR,KAAeO,MAAM,CAACE,OAD3B;AAFL,OAAP;;AAMF;AACE,aAAOH,KAAP;AAjCJ;AAmCD,CApCM","sourcesContent":["// import {\n//   GET_ALL_DATA,\n//   ADD_NEW_DATA,\n//   EDIT_DATA,\n//   DELETE_DATA,\n// } from \"../constant/constant\";\n// const initialState = {\n//   users: [\n//     {\n//       id: 1,\n//       name: \"ajeet\",\n//       username: \"stark\",\n//       email: \"stark@gmail.com\",\n//     },\n\n//     {\n//       id: 2,\n//       name: \"aman\",\n//       username: \"savoo\",\n//       email: \"aman@gmail.com\",\n//     },\n//   ],\n//   contact: null,\n// };\n\n// export const reducers = (state = initialState, action) => {\n//   switch (action.type) {\n\n\n//     // case ADD_NEW_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: [action.payload, ...state.users],\n//     //   };\n\n\n\n//     case GET_ALL_DATA:\n//       let arr = state.addnew.filter((contact) => contact.id == action.payload);\n\n//       arr = arr.values();\n//       for (let val of arr) {\n//         arr = val;\n//       }\n\n//       return {\n//         ...state,\n//         contact: arr,\n//       };\n\n\n\n//     // case EDIT_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: state.users.map((addnew) =>\n//     //       addnew.id == action.payload.id ? action.payload : addnew\n//     //     ),\n//     //   };\n\n//     // case DELETE_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: state.users.filter((addnew) => addnew.id !== action.payload),\n//     //   };\n//     default:\n//       return state;\n//   }\n// };\n\n\nimport {\n    CREATE_CONTACT,\n    GET_CONTACT,\n    UPDATE_CONTACT,\n    DELETE_CONTACT\n  } from \"../constant/constant\";\n  \n  const intialState = {\n    contacts: [\n\n      {\n        id: 3,\n        name: \"Ajeet Singh\",\n        username: \"Jatt\",\n        email: \"jatt@gmail.com\"\n      },\n      {\n        id: 4,\n        name: \"stark Singh\",\n        username: \"rana\",\n        email: \"jattran@gmail.com\"\n      },\n      {\n        id: 2,\n        name: \"Satvinder Singh\",\n        username: \"Samar\",\n        email: \"Singhsatvinder827@gmail.com\"\n      },\n      {\n        id: 10,\n        name: \"Samar Deep\",\n        username: \"Samar\",\n        email: \"Samar.biz\"\n      }\n    ],\n    contact: null\n  };\n  \n  export const cantactReducer = (state = intialState, action) => {\n    switch (action.type) {\n      case CREATE_CONTACT:\n        return {\n          ...state,\n          contacts: [action.payload, ...state.contacts]\n        };\n      case GET_CONTACT:\n        let arr = state.contacts.filter(\n          (contact) => contact.id == action.payload\n        );\n        arr = arr.values();\n        for (let val of arr) {\n          arr = val;\n        }\n        return {\n          ...state,\n          contact: arr\n        };\n      case UPDATE_CONTACT:\n        return {\n          ...state,\n          contacts: state.contacts.map((contact) =>\n            contact.id == action.payload.id ? action.payload : contact\n          )\n        };\n      case DELETE_CONTACT:\n        return {\n          ...state,\n          contacts: state.contacts.filter(\n            (contact) => contact.id !== action.payload\n          )\n        };\n      default:\n        return state;\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}