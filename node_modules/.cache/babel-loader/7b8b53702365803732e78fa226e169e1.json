{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/stark/Videos/cetpa/11/supercar/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"/home/stark/Videos/cetpa/11/supercar/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/stark/Videos/cetpa/11/supercar/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// import {\n//   GET_ALL_DATA,\n//   ADD_NEW_DATA,\n//   EDIT_DATA,\n//   DELETE_DATA,\n// } from \"../constant/constant\";\n// const initialState = {\n//   users: [\n//     {\n//       id: 1,\n//       name: \"ajeet\",\n//       username: \"stark\",\n//       email: \"stark@gmail.com\",\n//     },\n//     {\n//       id: 2,\n//       name: \"aman\",\n//       username: \"savoo\",\n//       email: \"aman@gmail.com\",\n//     },\n//   ],\n//   contact: null,\n// };\n// export const reducers = (state = initialState, action) => {\n//   switch (action.type) {\n//     // case ADD_NEW_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: [action.payload, ...state.users],\n//     //   };\n//     case GET_ALL_DATA:\n//       let arr = state.addnew.filter((contact) => contact.id == action.payload);\n//       arr = arr.values();\n//       for (let val of arr) {\n//         arr = val;\n//       }\n//       return {\n//         ...state,\n//         contact: arr,\n//       };\n//     // case EDIT_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: state.users.map((addnew) =>\n//     //       addnew.id == action.payload.id ? action.payload : addnew\n//     //     ),\n//     //   };\n//     // case DELETE_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: state.users.filter((addnew) => addnew.id !== action.payload),\n//     //   };\n//     default:\n//       return state;\n//   }\n// };\nimport{CREATE_CONTACT,GET_CONTACT,UPDATE_CONTACT,DELETE_CONTACT}from\"../constant/constant\";var intialState={contacts:[{id:3,name:\"Ajeet Singh\",username:\"Jatt\",email:\"jatt@gmail.com\"},{id:4,name:\"stark Singh\",username:\"rana\",email:\"jattran@gmail.com\"},{id:2,name:\"Satvinder Singh\",username:\"Samar\",email:\"Singhsatvinder827@gmail.com\"},{id:10,name:\"Samar Deep\",username:\"Samar\",email:\"Samar.biz\"}],contact:null};export var cantactReducer=function cantactReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:intialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CREATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[action.payload].concat(_toConsumableArray(state.contacts))});case GET_CONTACT:var arr=state.contacts.filter(function(contact){return contact.id==action.payload;});arr=arr.values();var _iterator=_createForOfIteratorHelper(arr),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var val=_step.value;arr=val;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return _objectSpread(_objectSpread({},state),{},{contact:arr});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.map(function(contact){return contact.id==action.payload.id?action.payload:contact;})});case DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact.id!==action.payload;})});default:return state;}};","map":{"version":3,"sources":["/home/stark/Videos/cetpa/11/supercar/src/redux/reducer/reducer.js"],"names":["CREATE_CONTACT","GET_CONTACT","UPDATE_CONTACT","DELETE_CONTACT","intialState","contacts","id","name","username","email","contact","cantactReducer","state","action","type","payload","arr","filter","values","val","map"],"mappings":"6YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OACIA,cADJ,CAEIC,WAFJ,CAGIC,cAHJ,CAIIC,cAJJ,KAKS,sBALT,CAOE,GAAMC,CAAAA,WAAW,CAAG,CAClBC,QAAQ,CAAE,CAER,CACEC,EAAE,CAAE,CADN,CAEEC,IAAI,CAAE,aAFR,CAGEC,QAAQ,CAAE,MAHZ,CAIEC,KAAK,CAAE,gBAJT,CAFQ,CAQR,CACEH,EAAE,CAAE,CADN,CAEEC,IAAI,CAAE,aAFR,CAGEC,QAAQ,CAAE,MAHZ,CAIEC,KAAK,CAAE,mBAJT,CARQ,CAcR,CACEH,EAAE,CAAE,CADN,CAEEC,IAAI,CAAE,iBAFR,CAGEC,QAAQ,CAAE,OAHZ,CAIEC,KAAK,CAAE,6BAJT,CAdQ,CAoBR,CACEH,EAAE,CAAE,EADN,CAEEC,IAAI,CAAE,YAFR,CAGEC,QAAQ,CAAE,OAHZ,CAIEC,KAAK,CAAE,WAJT,CApBQ,CADQ,CA4BlBC,OAAO,CAAE,IA5BS,CAApB,CA+BA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAiC,IAAhCC,CAAAA,KAAgC,2DAAxBR,WAAwB,IAAXS,CAAAA,MAAW,2CAC7D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKd,CAAAA,cAAL,CACE,sCACKY,KADL,MAEEP,QAAQ,EAAGQ,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACP,QAA5B,EAFV,GAIF,IAAKJ,CAAAA,WAAL,CACE,GAAIe,CAAAA,GAAG,CAAGJ,KAAK,CAACP,QAAN,CAAeY,MAAf,CACR,SAACP,OAAD,QAAaA,CAAAA,OAAO,CAACJ,EAAR,EAAcO,MAAM,CAACE,OAAlC,EADQ,CAAV,CAGAC,GAAG,CAAGA,GAAG,CAACE,MAAJ,EAAN,CAJF,yCAKkBF,GALlB,YAKE,+CAAqB,IAAZG,CAAAA,GAAY,aACnBH,GAAG,CAAGG,GAAN,CACD,CAPH,qDAQE,sCACKP,KADL,MAEEF,OAAO,CAAEM,GAFX,GAIF,IAAKd,CAAAA,cAAL,CACE,sCACKU,KADL,MAEEP,QAAQ,CAAEO,KAAK,CAACP,QAAN,CAAee,GAAf,CAAmB,SAACV,OAAD,QAC3BA,CAAAA,OAAO,CAACJ,EAAR,EAAcO,MAAM,CAACE,OAAP,CAAeT,EAA7B,CAAkCO,MAAM,CAACE,OAAzC,CAAmDL,OADxB,EAAnB,CAFZ,GAMF,IAAKP,CAAAA,cAAL,CACE,sCACKS,KADL,MAEEP,QAAQ,CAAEO,KAAK,CAACP,QAAN,CAAeY,MAAf,CACR,SAACP,OAAD,QAAaA,CAAAA,OAAO,CAACJ,EAAR,GAAeO,MAAM,CAACE,OAAnC,EADQ,CAFZ,GAMF,QACE,MAAOH,CAAAA,KAAP,CAjCJ,CAmCD,CApCM","sourcesContent":["// import {\n//   GET_ALL_DATA,\n//   ADD_NEW_DATA,\n//   EDIT_DATA,\n//   DELETE_DATA,\n// } from \"../constant/constant\";\n// const initialState = {\n//   users: [\n//     {\n//       id: 1,\n//       name: \"ajeet\",\n//       username: \"stark\",\n//       email: \"stark@gmail.com\",\n//     },\n\n//     {\n//       id: 2,\n//       name: \"aman\",\n//       username: \"savoo\",\n//       email: \"aman@gmail.com\",\n//     },\n//   ],\n//   contact: null,\n// };\n\n// export const reducers = (state = initialState, action) => {\n//   switch (action.type) {\n\n\n//     // case ADD_NEW_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: [action.payload, ...state.users],\n//     //   };\n\n\n\n//     case GET_ALL_DATA:\n//       let arr = state.addnew.filter((contact) => contact.id == action.payload);\n\n//       arr = arr.values();\n//       for (let val of arr) {\n//         arr = val;\n//       }\n\n//       return {\n//         ...state,\n//         contact: arr,\n//       };\n\n\n\n//     // case EDIT_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: state.users.map((addnew) =>\n//     //       addnew.id == action.payload.id ? action.payload : addnew\n//     //     ),\n//     //   };\n\n//     // case DELETE_DATA:\n//     //   return {\n//     //     ...state,\n//     //     users: state.users.filter((addnew) => addnew.id !== action.payload),\n//     //   };\n//     default:\n//       return state;\n//   }\n// };\n\n\nimport {\n    CREATE_CONTACT,\n    GET_CONTACT,\n    UPDATE_CONTACT,\n    DELETE_CONTACT\n  } from \"../constant/constant\";\n  \n  const intialState = {\n    contacts: [\n\n      {\n        id: 3,\n        name: \"Ajeet Singh\",\n        username: \"Jatt\",\n        email: \"jatt@gmail.com\"\n      },\n      {\n        id: 4,\n        name: \"stark Singh\",\n        username: \"rana\",\n        email: \"jattran@gmail.com\"\n      },\n      {\n        id: 2,\n        name: \"Satvinder Singh\",\n        username: \"Samar\",\n        email: \"Singhsatvinder827@gmail.com\"\n      },\n      {\n        id: 10,\n        name: \"Samar Deep\",\n        username: \"Samar\",\n        email: \"Samar.biz\"\n      }\n    ],\n    contact: null\n  };\n  \n  export const cantactReducer = (state = intialState, action) => {\n    switch (action.type) {\n      case CREATE_CONTACT:\n        return {\n          ...state,\n          contacts: [action.payload, ...state.contacts]\n        };\n      case GET_CONTACT:\n        let arr = state.contacts.filter(\n          (contact) => contact.id == action.payload\n        );\n        arr = arr.values();\n        for (let val of arr) {\n          arr = val;\n        }\n        return {\n          ...state,\n          contact: arr\n        };\n      case UPDATE_CONTACT:\n        return {\n          ...state,\n          contacts: state.contacts.map((contact) =>\n            contact.id == action.payload.id ? action.payload : contact\n          )\n        };\n      case DELETE_CONTACT:\n        return {\n          ...state,\n          contacts: state.contacts.filter(\n            (contact) => contact.id !== action.payload\n          )\n        };\n      default:\n        return state;\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}